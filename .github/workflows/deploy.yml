name: Full Stack CD

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-west1-docker.pkg.dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Backend Docker Image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t us-west1-docker.pkg.dev/cs144-25s-genekung-458805/team22/backend:latest \
            ./backend \
            --push

      - name: Build and Push Frontend Docker Image
        run: |
            docker buildx build \
              --platform linux/amd64 \
              --build-arg VITE_FIREBASE_API_KEY=${{ vars.VITE_FIREBASE_API_KEY }} \
              --build-arg VITE_FIREBASE_AUTH_DOMAIN=${{ vars.VITE_FIREBASE_AUTH_DOMAIN }} \
              --build-arg VITE_FIREBASE_PROJECT_ID=${{ vars.VITE_FIREBASE_PROJECT_ID }} \
              --build-arg VITE_DEV_BACKEND_URL=http://localhost:8080 \
              --build-arg VITE_PROD_BACKEND_URL=https://team22.cs144.org/api \
              -t us-west1-docker.pkg.dev/cs144-25s-genekung-458805/team22/frontend:latest \
              ./frontend \
              --push

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: cs144
          location: us-west1-a
          project_id: cs144-25s-genekung-458805

      - name: Deploy to GKE and restart to pull new images
        run: |
          kubectl apply -f k8s/redis.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/frontend-service.yaml
          kubectl rollout restart deployment backend
          kubectl rollout restart deployment frontend